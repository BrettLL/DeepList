function net = insertBnorm(net, l)
% --------------------------------------------------------------------
assert(isfield(net.layers{l}, 'filters'));
ndim = size(net.layers{l}.filters, 4);
layer = struct('type', 'bnorm', ...
               'filters', ones(ndim, 1, 'single'), ...
               'biases', zeros(ndim, 1, 'single'), ...
               'moments', zeros(ndim, 2, 'single'), ...
                'filtersMomentum', zeros(ndim, 1, 'single'), ...
                'biasesMomentum', zeros(ndim, 1, 'single'), ...
                'momentsMomentum', zeros(ndim, 2, 'single'), ...
               'filtersLearningRate', 1, ...
               'biasesLearningRate', 1, ...
               'momentsLearningRate', 0.15, ...%由于我们的总图像数很小，而这里需要从0开始增加，所以我们把这个数设置大一点，相当于阻尼小一点
               'filtersWeightDecay', 1, ...
               'biasesWeightDecay', 1, ...
               'momentsWeightDecay', 1) ;
%net.layers{l}.biases = [] ;
net.layers = horzcat(net.layers(1:l), layer, net.layers(l+1:end)) ;